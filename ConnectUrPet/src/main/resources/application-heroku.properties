#server.port=${PORT:5000}

# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema at the end of the session.
#spring.jpa.hibernate.ddl-auto = update

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#spring.datasource.driver-class-name = org.postgresql.Driver
#spring.datasource.url= jdbc:postgresql://ceqbglof0h8enj.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/dar2l9o6fq5u0m
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.username=u4bp9h2jh8lpgl
#spring.datasource.password=pc49ed04694bf2d4cab84c26cdc1604032220aac0c54d8156bf687c31528e289a
#spring.jpa.show-sql = true
#spring.jpa.open-in-view=false

server.port=${PORT:5000}

# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema at the end of the session.
spring.jpa.hibernate.ddl-auto = update

spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.url: ${JDBC_DATABASE_URL:}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true